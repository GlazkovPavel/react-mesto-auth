{"ast":null,"code":"var _jsxFileName = \"/Users/pavelglazkov/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditAvatarPopup({\n  isOpen,\n  onClose,\n  onUpdateAvatar,\n  overlay,\n  isLoading,\n  onChangeLoading\n}) {\n  _s();\n\n  const inputAvatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateAvatar({\n      avatar: inputAvatarRef.current.value\n      /* Значение инпута, полученное с помощью рефа */\n\n    });\n  }\n\n  function overlayClick(e) {\n    overlay(e.target);\n  }\n\n  const handleButtonText = `${isLoading ? 'Сохранение...' : 'Сохранение'}`;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    overlayClick: overlayClick,\n    onSubmit: handleSubmit,\n    isOpen: isOpen,\n    onClose: onClose,\n    name: \"avatar\",\n    title: \"\\u041E\\u0431\\u043D\\u043E\\u0432\\u0438\\u0442\\u044C \\u0430\\u0432\\u0430\\u0442\\u0430\\u0440\",\n    buttonText: handleButtonText,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputAvatarRef,\n      className: \"popup__item popup__item_type_foto\",\n      id: \"url-inputAvatar\",\n      type: \"url\",\n      name: \"link\",\n      placeholder: \"\\u0421\\u0441\\u044B\\u043B\\u043A\\u0430 \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"url-inputAvatar-error popup__input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditAvatarPopup, \"8hBs29vCprjXEI4INJP4+kcW/24=\");\n\n_c = EditAvatarPopup;\nexport default EditAvatarPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditAvatarPopup\");","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-auth/src/components/EditAvatarPopup.js"],"names":["React","PopupWithForm","EditAvatarPopup","isOpen","onClose","onUpdateAvatar","overlay","isLoading","onChangeLoading","inputAvatarRef","useRef","handleSubmit","e","preventDefault","avatar","current","value","overlayClick","target","handleButtonText"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAGA,SAASC,eAAT,CAAyB;AAACC,EAAAA,MAAD;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,cAAlB;AAAkCC,EAAAA,OAAlC;AAA2CC,EAAAA,SAA3C;AAAsDC,EAAAA;AAAtD,CAAzB,EAAgG;AAAA;;AAC9F,QAAMC,cAAc,GAAGT,KAAK,CAACU,MAAN,EAAvB;;AAEA,WAASC,YAAT,CAAsBC,CAAtB,EAAyB;AACvBA,IAAAA,CAAC,CAACC,cAAF;AACAL,IAAAA,eAAe;AACfH,IAAAA,cAAc,CAAC;AACbS,MAAAA,MAAM,EAAEL,cAAc,CAACM,OAAf,CAAuBC;AAAM;;AADxB,KAAD,CAAd;AAGD;;AAED,WAASC,YAAT,CAAsBL,CAAtB,EAAwB;AACtBN,IAAAA,OAAO,CAACM,CAAC,CAACM,MAAH,CAAP;AACD;;AAED,QAAMC,gBAAgB,GAAK,GAAEZ,SAAS,GAAG,eAAH,GAAqB,YAAa,EAAxE;AAGA,sBACM,QAAC,aAAD;AAAe,IAAA,YAAY,EAAEU,YAA7B;AAA2C,IAAA,QAAQ,EAAEN,YAArD;AAAmE,IAAA,MAAM,EAAER,MAA3E;AAAmF,IAAA,OAAO,EAAEC,OAA5F;AAAqG,IAAA,IAAI,EAAC,QAA1G;AAAmH,IAAA,KAAK,EAAC,uFAAzH;AAA2I,IAAA,UAAU,EAAEe,gBAAvJ;AAAA,4BACI;AAAO,MAAA,GAAG,EAAEV,cAAZ;AAA4B,MAAA,SAAS,EAAC,mCAAtC;AAA0E,MAAA,EAAE,EAAC,iBAA7E;AACO,MAAA,IAAI,EAAC,KADZ;AACkB,MAAA,IAAI,EAAC,MADvB;AAC8B,MAAA,WAAW,EAAC,4EAD1C;AAC2D,MAAA,QAAQ;AADnE;AAAA;AAAA;AAAA;AAAA,YADJ,eAGQ;AAAM,MAAA,SAAS,EAAC;AAAhB;AAAA;AAAA;AAAA;AAAA,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA,UADN;AAOD;;GAzBQP,e;;KAAAA,e;AA2BT,eAAeA,eAAf","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, overlay, isLoading, onChangeLoading}){\n  const inputAvatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateAvatar({\n      avatar: inputAvatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"avatar\" title=\"Обновить аватар\" buttonText={handleButtonText}>\n            <input ref={inputAvatarRef} className=\"popup__item popup__item_type_foto\" id=\"url-inputAvatar\"\n                   type=\"url\" name=\"link\" placeholder=\"Ссылка на фото\" required />\n                <span className=\"url-inputAvatar-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;"]},"metadata":{},"sourceType":"module"}