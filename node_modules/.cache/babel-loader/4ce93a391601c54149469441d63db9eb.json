{"ast":null,"code":"var _jsxFileName = \"/Users/pavelglazkov/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProfilePopup({\n  isOpen,\n  onClose,\n  onUpdateUser,\n  overlay,\n  isLoading,\n  onChangeLoading\n}) {\n  _s();\n\n  const currentUser = React.useContext(CurrentUserContext);\n  const [name, setName] = React.useState(' ');\n  const [description, setDescription] = React.useState(' ');\n\n  function handleNameChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value);\n  }\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateUser({\n      name,\n      about: description\n    });\n  }\n\n  function overlayClick(e) {\n    overlay(e.target);\n  }\n\n  const handleButtonText = `${isLoading ? 'Сохранение...' : 'Сохранение'}`;\n  return /*#__PURE__*/_jsxDEV(PopupWithForm, {\n    overlayClick: overlayClick,\n    onSubmit: handleSubmit,\n    isOpen: isOpen,\n    onClose: onClose,\n    name: \"profile\",\n    title: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\",\n    buttonText: handleButtonText,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__item popup__item_type_name\",\n      value: name || '',\n      onChange: handleNameChange,\n      id: \"text-input-name\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u0438\\u043C\\u044F\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-input-name-error popup__input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"popup__item popup__item_type_job\",\n      value: description || '',\n      onChange: handleDescriptionChange,\n      id: \"text-input-job\",\n      type: \"text\",\n      placeholder: \"\\u0412\\u0430\\u0448\\u0435 \\u043F\\u0440\\u0438\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n      required: true,\n      minLength: \"2\",\n      maxLength: \"200\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-input-job-error popup__input-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProfilePopup, \"d75MMh/DM+psVgglraRuByWOFY0=\");\n\n_c = EditProfilePopup;\nexport default EditProfilePopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProfilePopup\");","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-auth/src/components/EditProfilePopup.js"],"names":["React","PopupWithForm","CurrentUserContext","EditProfilePopup","isOpen","onClose","onUpdateUser","overlay","isLoading","onChangeLoading","currentUser","useContext","name","setName","useState","description","setDescription","handleNameChange","e","target","value","handleDescriptionChange","useEffect","about","handleSubmit","preventDefault","overlayClick","handleButtonText"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, overlay, isLoading, onChangeLoading}){\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(' ');\n  const [description, setDescription] = React.useState(' ');\n\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value)\n  }\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"profile\" title=\"Редактировать профиль\" buttonText={handleButtonText}>\n            <input className=\"popup__item popup__item_type_name\" value={name || ''} onChange={handleNameChange}\n                   id=\"text-input-name\" type=\"text\"\n                   placeholder=\"Ваше имя\" required minLength=\"2\" maxLength=\"40\" />\n                <span className=\"text-input-name-error popup__input-error\"></span>\n                <input className=\"popup__item popup__item_type_job\" value={description || ''} onChange={handleDescriptionChange}\n                       id=\"text-input-job\" type=\"text\"\n                       placeholder=\"Ваше призвание\" required minLength=\"2\" maxLength=\"200\" />\n                    <span className=\"text-input-job-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;"]},"metadata":{},"sourceType":"module"}