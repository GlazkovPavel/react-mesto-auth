{"ast":null,"code":"var _jsxFileName = \"/Users/pavelglazkov/Desktop/dev/react-mesto-auth/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [cards, setCards] = React.useState([]);\n  const [selectedCard, setSelectedCard] = React.useState({});\n  const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const changeLoading = () => {\n    setIsLoading(true);\n  };\n\n  React.useEffect(() => {\n    api.getUserInfo().then(res => {\n      setCurrentUser(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n  React.useEffect(() => {\n    api.getInitialCards().then(res => {\n      setCards(res);\n    }).catch(err => {\n      console.error(err);\n    });\n  }, []);\n\n  const handleCardClick = data => {\n    setImagePopupOpen(true);\n    setSelectedCard(data);\n  };\n\n  const closeAllPopups = () => {\n    setEditAvatarPopupOpen(false);\n    setEditProfilePopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setImagePopupOpen(false);\n  };\n\n  const handleEditProfileClick = () => {\n    setEditProfilePopupOpen(true);\n  };\n\n  const handleAddPlaceClick = () => {\n    setAddPlacePopupOpen(true);\n  };\n\n  function handleEditAvatarClick() {\n    setEditAvatarPopupOpen(true);\n  } //Меняет информацию о пользователе\n\n\n  const handleUpdateUser = data => {\n    api.setUserInfo(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }; //Меняет аватар\n\n\n  const handleUpdateAvatar = data => {\n    api.changeAvatar(data).then(res => {\n      setCurrentUser(res);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  }; //Добавление новой карточки\n\n\n  const handleAddPlaceSubmit = newCard => {\n    api.setCardServer(newCard).then(res => {\n      setCards([res, ...cards]);\n      closeAllPopups();\n    }).catch(err => {\n      console.error(err);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id); // Отправляем запрос в API и получаем обновлённые данные карточки\n\n    api.changeLikeCardStatus(card._id, !isLiked).then(newCard => {\n      setCards(state => state.map(c => c._id === card._id ? newCard : c));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      setCards(cards.filter(c => c._id !== card._id));\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', e => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    });\n  }, []);\n\n  function overlayClick(e) {\n    if (e.classList.contains('popup')) {\n      closeAllPopups();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(CurrentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Main, {\n        onEditAvatar: handleEditAvatarClick,\n        onEditProfile: handleEditProfileClick,\n        onAddPlace: handleAddPlaceClick,\n        onCardClick: handleCardClick,\n        onCardLike: handleCardLike,\n        onCardDelete: handleCardDelete,\n        cards: cards,\n        setCards: setCards\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isLoading: isLoading,\n        onChangeLoading: changeLoading,\n        overlay: overlayClick,\n        onAddPlace: handleAddPlaceSubmit,\n        isOpen: isAddPlacePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isLoading: isLoading,\n        onChangeLoading: changeLoading,\n        overlay: overlayClick,\n        onUpdateAvatar: handleUpdateAvatar,\n        isOpen: isEditAvatarPopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isLoading: isLoading,\n        onChangeLoading: changeLoading,\n        overlay: overlayClick,\n        onUpdateUser: handleUpdateUser,\n        isOpen: isEditProfilePopupOpen,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        overlay: overlayClick,\n        isOpen: isImagePopupOpen,\n        onClose: closeAllPopups,\n        card: selectedCard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"AGknJVAXoNv8nqguHvUzit4MCPY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/pavelglazkov/Desktop/dev/react-mesto-auth/src/components/App.js"],"names":["React","Header","Main","Footer","AddPlacePopup","EditAvatarPopup","EditProfilePopup","api","ImagePopup","CurrentUserContext","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","useState","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","cards","setCards","selectedCard","setSelectedCard","isImagePopupOpen","setImagePopupOpen","currentUser","setCurrentUser","isLoading","setIsLoading","changeLoading","useEffect","getUserInfo","then","res","catch","err","console","error","getInitialCards","handleCardClick","data","closeAllPopups","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleUpdateUser","setUserInfo","finally","handleUpdateAvatar","changeAvatar","handleAddPlaceSubmit","newCard","setCardServer","handleCardLike","card","isLiked","likes","some","i","_id","changeLikeCardStatus","state","map","c","handleCardDelete","deleteCard","filter","window","addEventListener","e","key","overlayClick","classList","contains"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction App() {\n\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([])\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [isLoading, setIsLoading] = React.useState(false)\n\n    const changeLoading = () =>{\n      setIsLoading(true)\n  }\n\n    React.useEffect(() => {\n      api.getUserInfo()\n          .then(res => {setCurrentUser(res)})\n          .catch(err => {console.error(err)})\n    }, [])\n\n    React.useEffect(() => {\n      api.getInitialCards()\n          .then(res => {setCards(res)})\n          .catch(err => {console.error(err)})\n    }, [])\n\n    const handleCardClick = (data) => {\n      setImagePopupOpen(true)\n      setSelectedCard(data)\n    }\n\n    const closeAllPopups = () => {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n    }\n\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true)\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlacePopupOpen(true)\n    }\n    function handleEditAvatarClick(){\n        setEditAvatarPopupOpen(true)\n    }\n    //Меняет информацию о пользователе\n    const handleUpdateUser = (data) => {\n      api.setUserInfo(data)\n          .then((res) => {\n            setCurrentUser(res)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Меняет аватар\n    const handleUpdateAvatar = (data) => {\n      api.changeAvatar(data)\n          .then((res) => {\n            setCurrentUser(res)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Добавление новой карточки\n    const handleAddPlaceSubmit = (newCard) => {\n      api.setCardServer(newCard)\n          .then((res) => {\n            setCards([res, ...cards]);\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  function handleCardDelete(card){\n    api.deleteCard(card._id)\n        .then(() => {\n          setCards(cards.filter((c) => c._id !== card._id))\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    })\n  },[])\n\n  function overlayClick(e) {\n      if (e.classList.contains('popup')){\n        closeAllPopups()\n      }\n  }\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n      <div className=\"page\">\n          <Header />\n          <Main\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onAddPlace={handleAddPlaceClick}\n              onCardClick={handleCardClick}\n              onCardLike={handleCardLike}\n              onCardDelete={handleCardDelete}\n              cards={cards}\n              setCards={setCards}\n\n          />\n          <AddPlacePopup\n              isLoading={isLoading}\n              onChangeLoading={changeLoading}\n              overlay={overlayClick}\n              onAddPlace={handleAddPlaceSubmit}\n              isOpen={isAddPlacePopupOpen}\n              onClose={closeAllPopups}\n          />\n          <EditAvatarPopup\n              isLoading={isLoading}\n              onChangeLoading={changeLoading}\n              overlay={overlayClick}\n              onUpdateAvatar={handleUpdateAvatar}\n              isOpen={isEditAvatarPopupOpen}\n              onClose={closeAllPopups}\n          />\n          <EditProfilePopup\n              isLoading={isLoading}\n              onChangeLoading={changeLoading}\n              overlay={overlayClick}\n              onUpdateUser={handleUpdateUser}\n              isOpen={isEditProfilePopupOpen}\n              onClose={closeAllPopups}\n          />\n          <ImagePopup overlay={overlayClick} isOpen={isImagePopupOpen} onClose={closeAllPopups} card={selectedCard} />\n          <Footer />\n      </div>\n      </CurrentUserContext.Provider>\n  );\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}