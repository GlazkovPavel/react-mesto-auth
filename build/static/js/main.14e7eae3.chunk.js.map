{"version":3,"sources":["images/mesto.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/AddPlacePopup.js","components/EditAvatarPopup.js","components/EditProfilePopup.js","utils/api.js","utils/utils.js","components/ImagePopup.js","components/Login.js","components/Register.js","components/ProtectedRoute.js","images/success.svg","images/Unionfail.svg","components/InfoTooltip.js","utils/apiAuth.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","src","logo","alt","path","to","exact","email","onClick","signOut","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","link","name","type","length","Main","onEditAvatar","avatar","about","onEditProfile","onAddPlace","cards","map","Footer","Date","getFullYear","PopupWithForm","overlayClick","isOpen","onClose","title","onSubmit","children","buttonText","AddPlacePopup","useState","setName","setLink","useEffect","handleButtonText","isLoading","e","overlay","target","preventDefault","onChangeLoading","value","onChange","placeholder","required","minLength","maxLength","EditAvatarPopup","onUpdateAvatar","inputAvatarRef","useRef","current","ref","id","EditProfilePopup","onUpdateUser","description","setDescription","api","config","this","_url","url","_headers","headers","res","ok","json","Promise","reject","status","fetch","then","_getResponse","data","method","body","JSON","stringify","cardId","authorization","ImagePopup","Login","setEmail","password","setPassword","handleSubmit","enter","Register","register","ProtectedRoute","isLoggedIn","Component","component","restProps","InfoTooltip","handleText","tooltipStatus","handleImage","fail","success","BASE_URL","checkResponse","App","isEditAvatarPopupOpen","setEditAvatarPopupOpen","isEditProfilePopupOpen","setEditProfilePopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","setCards","selectedCard","setSelectedCard","isImagePopupOpen","setImagePopupOpen","setCurrentUser","setIsLoading","setIsLoggedIn","isInfoTooltipOpen","setInfoTooltipOpen","setToolTipStatus","history","useHistory","token","jwt","localStorage","getItem","push","catch","err","console","error","getUserInfo","getInitialCards","changeLoading","closeAllPopups","classList","contains","window","addEventListener","key","Provider","removeItem","changeLikeCardStatus","newCard","state","c","deleteCard","filter","apiAuth","log","setItem","setCardServer","finally","changeAvatar","setUserInfo","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14e7eae3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mesto.5f3664ca.svg\";","import React from \"react\";\nimport logo from \"../images/mesto.svg\";\nimport { Route, Link} from \"react-router-dom\";\n\n\n\nfunction Header(props) {\n\n  return(\n        <header className=\"header\">\n          <img className=\"header__logo\" src={logo} alt=\"Место\" />\n          <Route path=\"/sign-up\">\n            <Link to=\"/sign-in\" className=\"header__button\">Войти</Link>\n          </Route>\n          <Route path=\"/sign-in\">\n            <Link to=\"/sign-up\" className=\"header__button\">Регистрация</Link>\n          </Route>\n          <Route exact path=\"/\">\n            <div className=\"header__container\">\n              <p className=\"header__email\">{props.email}</p>\n              <button className=\"header__button\" onClick={props.signOut}>Выйти</button>\n            </div>\n          </Route>\n        </header>\n    )\n}\nexport default Header;\n","import React from \"react\";\n\nexport const CurrentUserContext = React.createContext();\n","import React from \"react\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }){\n\n  const currentUser = React.useContext(CurrentUserContext)\n\n  function handleClick() {\n    onCardClick(card)\n  }\n  function handleLikeClick() {\n    onCardLike(card)\n  }\n  function handleDeleteClick() {\n    onCardDelete(card)\n  }\n  // Определяем, являемся ли мы владельцем текущей карточки\n  const isOwn = card.owner._id === currentUser._id;\n\n// Создаём переменную, которую после зададим в `className` для кнопки удаления\n  const cardDeleteButtonClassName = (\n      `element__trash ${isOwn ? '' : 'element__trash_hidden'}`\n  );\n\n  // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n// Создаём переменную, которую после зададим в `className` для кнопки лайка\n  const cardLikeButtonClassName = (\n      `element__description-like ${isLiked ? 'element__description-like_active' : ' '}`\n  );\n\n  return(\n\n        <li className=\"element__container\">\n          <div className=\"element__foto-container\">\n            <img className=\"element__foto\" onClick={handleClick} src={card.link} alt={card.name} />\n            <button className={cardDeleteButtonClassName} onClick={handleDeleteClick}></button>\n          </div>\n          <div className=\"element__description\">\n            <h2 className=\"element__description-text\">{card.name}</h2>\n            <div className=\"element__container-like\">\n              <button className={cardLikeButtonClassName} onClick={handleLikeClick} type=\"button\"></button>\n              <span className=\"element__likes\">{card.likes.length}</span>\n            </div>\n          </div>\n        </li>\n  )\n}\n\nexport default Card;","import React from 'react';\nimport Card from \"./Card\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main(props){\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return(\n        <main className=\"content\">\n            <section className=\"profile\">\n                <div className=\"profile__foto-container\" onClick={props.onEditAvatar}>\n                    <button className=\"profile__foto-edit\"></button>\n                    <img className=\"profile__foto\" alt={currentUser.name} src={currentUser.avatar}  />\n                </div>\n                <div className=\"profile__container-text\">\n                    <h1 className=\"profile__title\">{currentUser.name}</h1>\n                    <p className=\"profile__subtitle\">{currentUser.about}</p>\n                </div>\n                <button className=\"profile__button-edit\" type=\"button\" onClick={props.onEditProfile}></button>\n                <button className=\"profile__button-add\" type=\"button\" onClick={props.onAddPlace}></button>\n            </section>\n\n            <section className=\"element\">\n                <ul className=\"element__grid\">\n                  {props.cards.map(card =>(\n                      <Card\n                        key={card._id}\n                        card={card}\n                        onCardClick={props.onCardClick}\n                        onCardLike={props.onCardLike}\n                        onCardDelete={props.onCardDelete}\n\n                      />\n                  ))}\n\n                </ul>\n            </section>\n        </main>\n    )\n}\n\nexport default Main;","function Footer(){\n\n    return(\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\n        </footer>\n    )\n}\nexport default Footer;","import React from \"react\";\n\nfunction PopupWithForm(props){\n    return(\n        <div onClick={props.overlayClick} className={`popup popup_type_${props.name} ${props.isOpen && 'popup_opened'}`}>\n            <div className=\"popup__container\">\n                <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n                <h2 className=\"popup__heading\">{`${props.title}`}</h2>\n                <form className=\"popup__form form\" onSubmit={props.onSubmit} name=\"form\" type=\"form\">\n                    {props.children}\n\n                    <button className=\"popup__save\" type=\"submit\">{`${props.buttonText}`}</button>\n                </form>\n            </div>\n        </div>\n    )\n}\n\nexport default PopupWithForm;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props){\n\n  const [name, setName] = React.useState('')\n  const [link, setLink] = React.useState('')\n\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleLinkChange(e) {\n    setLink(e.target.value)\n  }\n\n  React.useEffect(() => {\n    setName('');\n    setLink('');\n  }, [props.isOpen]);\n\n  function handleSubmit(e){\n    e.preventDefault()\n    props.onChangeLoading();\n    props.onAddPlace({\n      name,\n      link,\n    });\n  }\n\n  function overlayClick(e){\n    props.overlay(e.target)\n  }\n\n  const handleButtonText = (`${props.isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n    return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={props.isOpen} onClose={props.onClose} name=\"add\" title=\"Новое место\" buttonText={handleButtonText}>\n          <input className=\"popup__item popup__item_title_add\" value={name}\n                 onChange={handleNameChange} type=\"text\" name=\"name\" placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" />\n            <span className=\"text-input-name-error popup__input-error\"></span>\n            <input className=\"popup__item popup__item_type_job\" value={link} onChange={handleLinkChange}\n                   type=\"url\" name=\"link\" placeholder=\"Ссылка на картинку\" required minLength=\"2\" maxLength=\"200\" />\n            <span className=\"text-input-job-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default AddPlacePopup;\n","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\n\n\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar, overlay, isLoading, onChangeLoading}){\n  const inputAvatarRef = React.useRef();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateAvatar({\n      avatar: inputAvatarRef.current.value /* Значение инпута, полученное с помощью рефа */,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"avatar\" title=\"Обновить аватар\" buttonText={handleButtonText}>\n            <input ref={inputAvatarRef} className=\"popup__item popup__item_type_foto\" id=\"url-inputAvatar\"\n                   type=\"url\" name=\"link\" placeholder=\"Ссылка на фото\" required />\n                <span className=\"url-inputAvatar-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditAvatarPopup;","import React from \"react\";\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\n\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser, overlay, isLoading, onChangeLoading}){\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState(' ');\n  const [description, setDescription] = React.useState(' ');\n\n  function handleNameChange(e) {\n    setName(e.target.value)\n  }\n  function handleDescriptionChange(e) {\n    setDescription(e.target.value)\n  }\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser, isOpen]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    onChangeLoading();\n    onUpdateUser({\n      name,\n      about: description,\n    });\n  }\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n  const handleButtonText = (`${isLoading ? 'Сохранение...' : 'Сохранение'}`);\n\n\n  return(\n        <PopupWithForm overlayClick={overlayClick} onSubmit={handleSubmit} isOpen={isOpen} onClose={onClose} name=\"profile\" title=\"Редактировать профиль\" buttonText={handleButtonText}>\n            <input className=\"popup__item popup__item_type_name\" value={name || ''} onChange={handleNameChange}\n                   id=\"text-input-name\" type=\"text\"\n                   placeholder=\"Ваше имя\" required minLength=\"2\" maxLength=\"40\" />\n                <span className=\"text-input-name-error popup__input-error\"></span>\n                <input className=\"popup__item popup__item_type_job\" value={description || ''} onChange={handleDescriptionChange}\n                       id=\"text-input-job\" type=\"text\"\n                       placeholder=\"Ваше призвание\" required minLength=\"2\" maxLength=\"200\" />\n                    <span className=\"text-input-job-error popup__input-error\"></span>\n        </PopupWithForm>\n    )\n}\n\nexport default EditProfilePopup;","import {config} from \"./utils\";\nclass Api {\n    constructor(config) {\n        this._url = config.url;\n        this._headers = config.headers;\n    }\n\n    _getResponse(res) {\n        if (res.ok) {\n            return res.json();\n        }\n        return Promise.reject(`Ошибка: ${res.status}`);\n    }\n\n    getInitialCards() {\n        return fetch(`${this._url}/cards`, {\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    getUserInfo() {\n        return fetch(`${this._url}/users/me`, {\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    setUserInfo(data) {\n        return fetch(`${this._url}/users/me`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                about: data.about\n            })\n        })\n            .then(this._getResponse)\n    }\n\n    setCardServer(data) {\n        return fetch(`${this._url}/cards`, {\n            method: 'POST',\n            headers: this._headers,\n            body: JSON.stringify({\n                name: data.name,\n                link: data.link\n            })\n        })\n            .then(this._getResponse)\n    }\n\n  changeLikeCardStatus(cardId, isLiked) {\n        return fetch(`${this._url}/cards/likes/${cardId}`, {\n            method: isLiked ? 'PUT' : 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n    deleteCard(cardId) {\n        return fetch(`${this._url}/cards/${cardId}`, {\n            method: 'DELETE',\n            headers: this._headers\n        })\n            .then(this._getResponse)\n    }\n\n\n    changeAvatar(data) {\n        return fetch(`${this._url}/users/me/avatar`, {\n            method: 'PATCH',\n            headers: this._headers,\n            body: JSON.stringify({\n                avatar: data.avatar,\n            })\n        })\n            .then(this._getResponse)\n    }\n}\n\nconst api = new Api(config);\nexport default api;","\nexport const config = {\n    url: 'https://api.mesto.glazkovpavel.nomoredomains.club',\n    headers: {\n        authorization: 'df3e4aab-6899-4784-852c-de3c6ef6b3bc',\n        'Content-Type': 'application/json'\n    }\n};\n","import React from \"react\";\n\nfunction ImagePopup({isOpen, onClose, card, overlay}){\n\n  function overlayClick(e){\n    overlay(e.target)\n  }\n\n    return(\n        <div onClick={overlayClick} className={`popup popup_type_preview ${isOpen && 'popup_opened'}`}>\n            <div className=\"popup__preview-container\">\n                <span className=\"popup__close popup__close_type_preview\" onClick={onClose}></span>\n                <img className=\"popup__preview-img\" src={card.link} alt={card.name} />\n                <p className=\"popup__preview-subtitle\">{card.name}</p>\n            </div>\n        </div>\n    )\n}\nexport default ImagePopup;","import React from \"react\";\n\nexport function Login(props) {\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleSubmit(e){\n    e.preventDefault();\n    props.enter(email, password)\n  }\n\n  return(\n      <div className=\"login\">\n        <p className=\"login__title\">Вход</p>\n        <form className=\"login__form\" type=\"form\" onSubmit={handleSubmit}>\n          <input\n              className=\"login__input\"\n              type=\"email\"\n              placeholder=\"Email\"\n              onChange={(e) => setEmail(e.target.value)}/>\n          <input\n              className=\"login__input\"\n              type=\"password\"\n              placeholder=\"Пароль\"\n              onChange={(e) => setPassword(e.target.value)} />\n        </form>\n        <button className=\"login__button\" type=\"submit\" onClick={handleSubmit}>Войти</button>\n      </div>\n  )\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\n\n\nexport function Register(props) {\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n\n  function handleSubmit(e){\n    e.preventDefault();\n    props.register(email, password)\n  }\n\n  return(\n      <div className=\"login\">\n        <p className=\"login__title\">Регистрация</p>\n        <form onSubmit={handleSubmit} className=\"login__form\" type=\"form\">\n          <input\n              className=\"login__input\"\n              type=\"email\"\n              name=\"email\"\n              onChange={(e) => setEmail(e.target.value)}\n              placeholder=\"Email\"\n               />\n          <input\n              className=\"login__input\"\n              type=\"password\"\n              name=\"email\"\n              onChange={(e) => setPassword(e.target.value)}\n              placeholder=\"Пароль\"\n               />\n        </form>\n        <button className=\"login__button\" type=\"submit\" onClick={handleSubmit}>Зарегистрироваться</button>\n        <Link className=\"login__link\" to=\"/sign-in\">Уже зарегистрированы? Войти</Link>\n      </div>\n  )\n}\n","import React from \"react\";\nimport {Route, Redirect} from \"react-router-dom\";\n\nexport const ProtectedRoute = ({ isLoggedIn, component: Component ,...restProps}) => {\n\n  if(!isLoggedIn){\n    return <Redirect to=\"/sign-in\"></Redirect>\n  }\n  return <Route>\n    <Component {...restProps} />\n  </Route>\n}\n","export default __webpack_public_path__ + \"static/media/success.1b6082f8.svg\";","export default __webpack_public_path__ + \"static/media/Unionfail.df8eddf6.svg\";","import React from \"react\";\nimport success from '../images/success.svg'\nimport fail from '../images/Unionfail.svg'\n\nexport function InfoTooltip(props){\n\n  function overlayClick(e){\n    props.overlay(e.target)\n  }\n\n  const handleText = (\n   `${props.tooltipStatus ? 'Что-то пошло не так! Попробуйте ещё раз.' : 'Вы успешно зарегистрировались!'}`\n  );\n\n  const handleImage = (`${props.tooltipStatus ? fail : success}`);\n\n  return(\n      <div className={`popup ${props.isOpen && 'popup_opened'}`} onClick={overlayClick} >\n        <div className=\"infoTooltip\">\n          <button className=\"popup__close\" type=\"button\" onClick={props.onClose}></button>\n          <img className=\"infoTooltip__image\" src={handleImage} alt=\"\" />\n          <p className=\"infoTooltip__title\">{handleText}</p>\n        </div>\n      </div>\n  )\n}","export const BASE_URL = 'https://api.mesto.glazkovpavel.nomoredomains.club';\n\nconst checkResponse = (res) => {\n  if (res.ok) {\n    return res.json();\n  }\n  return Promise.reject(`Ошибка: ${res.status}`);\n}\n\nexport const register = (email, password) => {\n  return fetch(`${BASE_URL}/signup`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n      .then(checkResponse)\n}\n\nexport const enter = (email, password) => {\n  return fetch(`${BASE_URL}/signin`, {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({email, password})\n  })\n      .then(checkResponse)\n}\n\nexport const getContent = (token) => {\n  return fetch(`${BASE_URL}/users/me`, {\n    method: 'GET',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${token}`\n    }\n  })\n      .then(checkResponse)\n}\n","import React from 'react';\nimport Header from \"./Header\";\nimport Main from \"./Main\";\nimport Footer from \"./Footer\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport api from \"../utils/api\";\nimport ImagePopup from \"./ImagePopup\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport { Route, Switch, useHistory } from 'react-router-dom';\nimport {Login} from \"./Login\";\nimport {Register} from \"./Register\";\nimport {ProtectedRoute} from \"./ProtectedRoute\";\nimport {InfoTooltip} from \"./InfoTooltip\";\nimport * as apiAuth from \"../utils/apiAuth\"\n\nfunction App() {\n    const [isEditAvatarPopupOpen, setEditAvatarPopupOpen] = React.useState(false);\n    const [isEditProfilePopupOpen, setEditProfilePopupOpen] = React.useState(false);\n    const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n    const [cards, setCards] = React.useState([])\n    const [selectedCard, setSelectedCard] = React.useState({})\n    const [isImagePopupOpen, setImagePopupOpen] = React.useState(false);\n    const [currentUser, setCurrentUser] = React.useState({})\n    const [isLoading, setIsLoading] = React.useState(false)\n    const [isLoggedIn, setIsLoggedIn] = React.useState(false)\n    const [email, setEmail] = React.useState('')\n    const [isInfoTooltipOpen, setInfoTooltipOpen] = React.useState(false)\n    const [tooltipStatus, setToolTipStatus] = React.useState(false)\n\n    const history = useHistory();\n\n    React.useEffect(() => {\n      const jwt = localStorage.getItem('jwt');\n      if(jwt){\n        apiAuth.getContent(jwt)\n            .then((res) => {\n              setIsLoggedIn(true);\n              setEmail(res.data.email);\n              history.push('/')\n            })\n            .catch(err => console.error(err))\n      }\n    }, [history])\n\n  React.useEffect(() => {\n    api.getUserInfo()\n        .then(res => {setCurrentUser(res)})\n        .catch(err => {console.error(err)})\n  }, [])\n\n  React.useEffect(() => {\n    api.getInitialCards()\n        .then(res => {setCards(res)})\n        .catch(err => {console.error(err)})\n  }, [])\n\n  function register(email, password) {\n    apiAuth.register(email, password)\n        .then((res) => {\n          if (res.data._id) {\n            setToolTipStatus(false)\n            setInfoTooltipOpen(true)\n            history.push('/sign-in');\n          }\n        })\n        .catch((err) => {\n          setToolTipStatus(true)\n          setInfoTooltipOpen(true)\n          console.log(`Упс, произошла ошибка: ${err}`);\n        })\n  }\n\n  function enter(email, password) {\n    apiAuth.enter(email, password)\n        .then((data) => {\n          if (data.token) {\n            setToolTipStatus(false)\n            setInfoTooltipOpen(false)\n            localStorage.setItem('jwt', data.token)\n            setIsLoggedIn(true)\n            history.push('/')\n            setEmail(email)\n\n          } else {\n            setToolTipStatus(true)\n            setInfoTooltipOpen(true)\n          }\n        })\n        .catch((err) => {\n          setToolTipStatus(true)\n          setInfoTooltipOpen(true)\n          console.log(`Упс, произошла ошибка: ${err}`);\n        })\n  }\n\n  function signOut(){\n    localStorage.removeItem('jwt');\n    setIsLoggedIn(false);\n    history.push('/sign-in');\n  }\n\n\n    const changeLoading = () =>{\n      setIsLoading(true)\n  }\n\n    const handleCardClick = (data) => {\n      setImagePopupOpen(true)\n      setSelectedCard(data)\n    }\n\n    const closeAllPopups = () => {\n        setEditAvatarPopupOpen(false)\n        setEditProfilePopupOpen(false)\n        setAddPlacePopupOpen(false)\n        setImagePopupOpen(false)\n        setInfoTooltipOpen(false)\n    }\n\n    const handleEditProfileClick = () => {\n        setEditProfilePopupOpen(true)\n    }\n    const handleAddPlaceClick = () => {\n        setAddPlacePopupOpen(true)\n    }\n    function handleEditAvatarClick(){\n        setEditAvatarPopupOpen(true)\n    }\n    //Меняет информацию о пользователе\n    const handleUpdateUser = (data) => {\n      api.setUserInfo(data)\n          .then((res) => {\n            setCurrentUser(res)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Меняет аватар\n    const handleUpdateAvatar = (data) => {\n      api.changeAvatar(data)\n          .then((res) => {\n            setCurrentUser(res)\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n    //Добавление новой карточки\n    const handleAddPlaceSubmit = (newCard) => {\n      api.setCardServer(newCard)\n          .then((res) => {\n            setCards([res, ...cards]);\n            closeAllPopups()\n          })\n          .catch(err => {console.error(err)})\n          .finally(() => {\n            setIsLoading(false)\n          })\n    }\n  function handleCardLike(card) {\n    // Снова проверяем, есть ли уже лайк на этой карточке\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n    // Отправляем запрос в API и получаем обновлённые данные карточки\n    api.changeLikeCardStatus(card._id, !isLiked)\n        .then((newCard) => {\n          setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  function handleCardDelete(card){\n    api.deleteCard(card._id)\n        .then(() => {\n          setCards(cards.filter((c) => c._id !== card._id))\n        })\n        .catch(err => {console.error(err)})\n  }\n\n  React.useEffect(() => {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        closeAllPopups();\n      }\n    })\n  },[])\n\n  function overlayClick(e) {\n      if (e.classList.contains('popup')){\n        closeAllPopups()\n      }\n  }\n\n  return (\n      <CurrentUserContext.Provider value={currentUser}>\n          <div className=\"page\">\n            <Header signOut={signOut} email={email} />\n            <Switch>\n              <ProtectedRoute\n                  exact path=\"/\"\n                  component={Main}\n                  onEditAvatar={handleEditAvatarClick}\n                  onEditProfile={handleEditProfileClick}\n                  onAddPlace={handleAddPlaceClick}\n                  onCardClick={handleCardClick}\n                  onCardLike={handleCardLike}\n                  onCardDelete={handleCardDelete}\n                  cards={cards}\n                  setCards={setCards}\n                  isLoggedIn={isLoggedIn}\n              />\n              <Route path=\"/sign-up\">\n                <Register register={register}/>\n              </Route>\n              <Route path=\"/sign-in\">\n                <Login enter={enter} />\n              </Route>\n            </Switch>\n            <InfoTooltip\n                onClose={closeAllPopups}\n                isOpen={isInfoTooltipOpen}\n                overlay={overlayClick}\n                tooltipStatus={tooltipStatus}\n            />\n            <AddPlacePopup\n                isLoading={isLoading}\n                onChangeLoading={changeLoading}\n                overlay={overlayClick}\n                onAddPlace={handleAddPlaceSubmit}\n                isOpen={isAddPlacePopupOpen}\n                onClose={closeAllPopups}\n            />\n            <EditAvatarPopup\n                isLoading={isLoading}\n                onChangeLoading={changeLoading}\n                overlay={overlayClick}\n                onUpdateAvatar={handleUpdateAvatar}\n                isOpen={isEditAvatarPopupOpen}\n                onClose={closeAllPopups}\n            />\n            <EditProfilePopup\n                isLoading={isLoading}\n                onChangeLoading={changeLoading}\n                overlay={overlayClick}\n                onUpdateUser={handleUpdateUser}\n                isOpen={isEditProfilePopupOpen}\n                onClose={closeAllPopups}\n            />\n            <ImagePopup overlay={overlayClick} isOpen={isImagePopupOpen} onClose={closeAllPopups} card={selectedCard} />\n            <Footer />\n          </div>\n      </CurrentUserContext.Provider>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}